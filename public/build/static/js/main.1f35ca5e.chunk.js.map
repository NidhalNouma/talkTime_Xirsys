{"version":3,"sources":["../node_modules/express/lib sync","component/WaveAudio.js","hooks/Xirsys.js","hooks/Main1.js","component/Audio.js","hooks/Call.js","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","WaveAudio","stream","lstream","useState","Wave","wave","lwave","rel","setRel","audio","useRef","useEffect","interval","setTimeout","r","clearTimeout","active","fromStream","type","colors","console","log","current","srcObject","stopStream","ref","style","display","volume","autoPlay","Xirsys","setRandomUser","rstream","Object","$xirsys","_ice","ice","apiUrl","info","this","evtListeners","iceServers","ident","secret","doICE","prototype","onICEList","channelPath","own","xhr","XMLHttpRequest","onreadystatechange","$evt","readyState","status","res","JSON","parse","responseText","filterPaths","v","emit","path","open","setRequestHeader","btoa","send","arr","i","l","length","a","item","url","urls","push","on","sEvent","cbFunc","off","hasOwnProperty","index","indexOf","splice","data","handlers","apply","_sig","signal","userName","sig","tmpToken","sigHostPath","pendListeners","heartbeat","connectTo","channel","ver","keepAliveInt","connected","close","stopHeart","cleanChPath","doToken","_headers","$","ajax","dataType","headers","error","success","doSignal","host","randomUser","users","setupSocket","WebSocket","addEventListener","evt","startHeart","event","f","msg","pkt","payload","p","meta","m","msgEvent","o","fromPeer","split","sysNum","lastIndexOf","substring","sendMessage","toPeer","undefined","t","m_event","stringify","substr","clearInterval","setInterval","_p2p","p2p","mediaStream","servers","pc","receiveCandidate","receiveOffer","receiveAnswer","forceTurn","remotePeerID","remoteStreams","isCaller","autoAnswer","peerConnSuccess","peerConnRequest","iceDisconnected","updateMediaStream","getTracks","forEach","track","addTrack","createOffer","then","desc","setLocalAndSendMessage","catch","err","onCreateSessionDescriptionError","callPeer","custID","createPeerConnection","iceCandidate","rtcIceCandidate","RTCIceCandidate","addIceCandidate","acceptRequest","offer","isVerfied","verified","setRemoteDescription","RTCSessionDescription","createAnswer","RTCPeerConnection","ontrack","streams","onicecandidate","cand","candidate","sdpMid","sdpMLineIndex","onremovestream","onconnectionstatechange","connectionState","oniceconnectionstatechange","iceConnectionState","message","hangup","callId","addRemoteStream","remoteStream","getLiveStream","sessionDescription","setLocalDescription","xirsys","Main","setLStream","MediaStream","username","setUsername","remoteCallID","setRemoteCallID","startCall","setStartCall","peer","setPeer","setSig","setIce","call","setCall","inCall","setInCall","setXirsys","reload","setReload","onICE","mediaConstraints","navigator","mediaDevices","getUserMedia","str","setLocalStream","alert","getMyMedia","isTURN","getURLParameter","onReady","onStopCall","onStartCall","remoteId","name","url_string","window","location","href","c","URL","searchParams","get","onLoad","s4","Math","floor","random","toString","guid","urlName","reset","Audio","answer","stopAudioOnly","setInter","cnt","setCnt","intervalAnswer","color","height","width","stop","Call","state","setState","btnText","setBtnText","click","App","className","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f35ca5e.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 197;","import React, { useState, useEffect, useRef } from \"react\";\nimport Wave from \"wave-visualizer\";\n\nfunction WaveAudio({ stream, lstream }) {\n  const [wave] = useState(new Wave());\n  const [lwave] = useState(new Wave());\n  const [rel, setRel] = useState(0);\n\n  const audio = useRef(null);\n\n  useEffect(() => {\n    const interval = setTimeout(() => {\n      setRel((r) => r + 1);\n      // console.log(rel);\n    }, 1000);\n    return () => clearTimeout(interval);\n  }, [rel]);\n\n  useEffect(() => {\n    stream &&\n      stream.active &&\n      wave.fromStream(stream, \"wave\", {\n        type: \"shine\",\n        colors: [\"rgba(149, 54, 64,1)\", \"white\", \"blue\"],\n      });\n\n    lstream &&\n      lstream.active &&\n      lwave.fromStream(lstream, \"lwave\", {\n        type: \"shine\",\n        colors: [\"rgba(45, 134, 233, 1)\", \"white\", \"blue\"],\n      });\n\n    console.log(\"Start streaming audio ...,\", stream);\n\n    audio.current.srcObject = stream;\n    return () => {\n      wave.stopStream();\n      lwave.stopStream();\n    };\n  }, []);\n\n  return (\n    <div>\n      <canvas id=\"wave\"></canvas>\n      <br />\n      <canvas id=\"lwave\"></canvas>\n      <audio\n        ref={audio}\n        style={{ display: \"none\" }}\n        volume=\"true\"\n        autoPlay\n      ></audio>\n    </div>\n  );\n}\n\nexport default WaveAudio;\n","import $ from \"jquery\";\nimport { useState, useEffect } from \"react\";\n\n// Media\n\nfunction Xirsys(setRandomUser, rstream) {\n  const [$xirsys] = useState(new Object());\n\n  useEffect(() => {\n    //Ice\n\n    var _ice = ($xirsys.ice = function (apiUrl, info) {\n      if (!info) info = {};\n      this.info = info;\n      this.apiUrl = !!apiUrl ? apiUrl : \"/webrtc\";\n      this.evtListeners = {};\n\n      //path to channel we are sending data to.\n      // this.channelPath = !!info.channel ? this.cleanChPath(info.channel) : \"\";\n\n      this.iceServers = null;\n      if (!!this.apiUrl) {\n        if (this.info.ident && this.info.secret) {\n          this.doICE(this.info.ident, this.info.secret); //first get our token.\n        } else {\n          this.doICE();\n        }\n      }\n    });\n\n    _ice.prototype.onICEList = \"onICEList\";\n\n    _ice.prototype.doICE = function (ident, secret) {\n      console.log(\"*ice*  doICE: \", this.apiUrl + \"/_turn\" + this.channelPath);\n      var own = this;\n      var xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = function ($evt) {\n        if (xhr.readyState === 4 && xhr.status === 200) {\n          var res = JSON.parse(xhr.responseText);\n          console.log(\"*ice*  response: \", res);\n          own.iceServers = own.filterPaths(res.v.iceServers);\n\n          own.emit(own.onICEList);\n        }\n      };\n      var path = this.apiUrl + \"/_turn/\" + this.channelPath;\n      xhr.open(\"PUT\", path, true);\n      if (ident && secret)\n        xhr.setRequestHeader(\n          \"Authorization\",\n          \"Basic \" + btoa(`${ident}:${secret}`)\n        );\n      xhr.send();\n    };\n\n    // //check for depricated RTCIceServer \"url\" property, needs to be \"urls\" now.\n    _ice.prototype.filterPaths = function (arr) {\n      var l = arr.length,\n        i;\n      var a = [];\n      for (i = 0; i < l; i++) {\n        var item = arr[i];\n        var v = item.url;\n        if (!!v) {\n          item.urls = v;\n          delete item.url;\n        }\n        a.push(item);\n      }\n      return a;\n    };\n\n    // //formats the custom channel path how we need it.\n    // _ice.prototype.cleanChPath = function (path) {\n    //   //has slash at front\n    //   console.log(\"cleanChPath path recv: \" + path);\n    //   if (path.indexOf(\"/\") !== 0) path = \"/\" + path;\n    //   if (path.lastIndexOf(\"/\") === path.length - 1)\n    //     path = path.substr(0, path.lastIndexOf(\"/\"));\n    //   console.log(\"cleanChPath new path: \" + path);\n    //   return path;\n    // };\n\n    _ice.prototype.on = function (sEvent, cbFunc) {\n      //console.log('*ice*  on ',sEvent);\n      if (!sEvent || !cbFunc) {\n        console.log(\"error:  missing arguments for on event.\");\n        return false;\n      }\n      if (!this.evtListeners[sEvent]) this.evtListeners[sEvent] = [];\n      this.evtListeners[sEvent].push(cbFunc);\n    };\n    _ice.prototype.off = function (sEvent, cbFunc) {\n      if (!this.evtListeners.hasOwnProperty(sEvent)) return false; //end\n\n      var index = this.evtListeners[sEvent].indexOf(cbFunc);\n      if (index !== -1) {\n        this.evtListeners[sEvent].splice(index, 1);\n        return true; //else end here.\n      }\n      return false; //else end here.\n    };\n\n    _ice.prototype.emit = function (sEvent, data) {\n      var handlers = this.evtListeners[sEvent];\n      if (!!handlers) {\n        var l = handlers.length;\n        for (var i = 0; i < l; i++) {\n          var item = handlers[i];\n          item.apply(this, [{ type: this.onICEList }]);\n        }\n      }\n    };\n\n    console.log(\"$xirsys.ice Loaded Successfuly!!!\");\n    _ice = null;\n\n    // Signal\n\n    var _sig = ($xirsys.signal = function (apiUrl, userName, info) {\n      if (!info) info = {};\n      this.info = info;\n      //internal values\n      this.sig = null; //local signal object.\n      this.tmpToken = null; //authorized token for signal calls\n      this.sigHostPath = null; //full authorized path to signaling service.\n      this.pendListeners = []; //event listener - hold until init.\n      this.heartbeat = null; //interval that keeps the signal open.\n      this.evtListeners = {};\n\n      //path to channel we are sending data to.\n      //this.channelPath = !!info.channel ? this.cleanChPath(info.channel) : '';\n\n      this.userName = !!userName ? userName : null;\n      this.apiUrl = !!apiUrl ? apiUrl : \"/webrtc\";\n      //console.log('*signal*  constructed');\n      this.connectTo(!!info.channel ? info.channel : \"\");\n    });\n\n    _sig.prototype.ver = \"v2\";\n    _sig.prototype.keepAliveInt = 800;\n    _sig.prototype.connected = false;\n\n    _sig.prototype.close = function () {\n      console.log(\"close \", this.sig);\n      if (this.heartbeat) this.stopHeart();\n      if (this.sig) this.sig.close();\n    };\n\n    _sig.prototype.connectTo = function (channel) {\n      this.channelPath = !!channel ? this.cleanChPath(channel) : \"\";\n      console.log(\"connectTo: \", this.channelPath);\n      //if connected stop current, then do new.\n      if (!!this.sig) {\n        this.close();\n        var own = this;\n        setTimeout(() => {\n          own.doToken();\n        }, 800);\n      } else if (!!this.apiUrl) {\n        //!!this.userName &&\n        if (this.info.ident && this.info.secret) {\n          this.doToken(this.info.ident, this.info.secret); //first get our token.\n        } else {\n          this.doToken();\n        }\n      } else {\n        console.log(\"Error: Could connect signal!\");\n      }\n      return true;\n    };\n\n    _sig.prototype.doToken = function (ident, secret) {\n      var path =\n        this.apiUrl + \"/_token\" + this.channelPath + \"?k=\" + this.userName;\n      console.log(\"*signal*  PUT doToken to \" + path);\n      var own = this;\n      var _headers = {};\n      if (ident && secret) {\n        _headers[\"Authorization\"] = \"Basic \" + btoa(ident + \":\" + secret);\n      }\n      $.ajax({\n        url: path,\n        type: \"PUT\",\n        dataType: \"json\",\n        headers: _headers,\n        error: function (data) {\n          console.log(\"*signal*  error: \", data);\n        },\n        success: function (data) {\n          own.tmpToken = data.v;\n          if (own.tmpToken === \"no_namespace\") {\n            console.log(\"*signal*  fail: \", own.tmpToken);\n            return;\n          }\n          console.log(\"*signal*  token: \", own.tmpToken);\n          if (own.info.ident && own.info.secret) {\n            own.doSignal(own.info.ident, own.info.secret); //first get our token.\n          } else {\n            own.doSignal();\n          }\n        },\n      });\n    };\n\n    _sig.prototype.doSignal = function (ident, secret) {\n      console.log(\n        \"*signal*  GET doSignal to \" +\n          this.apiUrl +\n          \"/_host\" +\n          this.channelPath +\n          \"?type=signal&k=\" +\n          this.userName\n      );\n      var own = this;\n      var path = this.info.channel\n        ? this.apiUrl +\n          \"/_host\" +\n          this.channelPath +\n          \"?type=signal&k=\" +\n          this.userName\n        : this.apiUrl + \"/_host?type=signal&k=\" + this.userName;\n      var _headers = {};\n      if (ident && secret) {\n        _headers[\"Authorization\"] = \"Basic \" + btoa(ident + \":\" + secret);\n      }\n      $.ajax({\n        url: path,\n        type: \"GET\",\n        dataType: \"json\",\n        headers: _headers,\n        error: function (data) {\n          console.log(\"*signal*  error: \", data);\n        },\n        success: function (data) {\n          own.host = data.v + \"/\" + own.ver + \"/\" + own.tmpToken;\n          console.log(\"KKKKKKKKK \", data);\n          if (data.randomUser) {\n            own.randomUser = data.randomUser;\n            setRandomUser(data.randomUser);\n          }\n\n          if (data.users) own.users = data.users;\n\n          console.log(\"signal host: \", own.host);\n          own.setupSocket();\n        },\n      });\n    };\n\n    //setup socket to signaling server.\n    _sig.prototype.setupSocket = function () {\n      console.log(\"*signal*  setupSocket to \" + this.host);\n      var own = this;\n      this.sig = new WebSocket(this.host);\n      //notify when connection is open\n      this.sig.addEventListener(\"open\", (evt) => {\n        own.startHeart();\n        own.connected = true;\n      });\n      //notify when connection closed\n      this.sig.addEventListener(\"close\", (evt) => {\n        if (this.heartbeat) own.stopHeart();\n        own.connected = false;\n        this.sig = null;\n      });\n\n      //add pending listeners to signaling object.\n      var l = this.pendListeners.length;\n      if (l > 0) {\n        for (var i = 0; i < l; i++) {\n          var item = this.pendListeners[i];\n          this.on(item.event, item.f);\n        }\n        this.pendListeners = [];\n      }\n      //notify when a message is received from signal network.\n      this.sig.addEventListener(\"message\", (msg) => {\n        var pkt = JSON.parse(msg.data);\n        console.log(\"*signal*  signal message! \", pkt);\n        var payload = pkt.p; //the actual message data sent\n        var meta = pkt.m; //meta object\n        var msgEvent = meta.o; //event label of message\n        // var toPeer = meta.t; //msg to user (if private msg)\n        var fromPeer = meta.f; //msg from user\n        if (!!fromPeer) {\n          //remove the peer path to display just the name not path.\n          var p = fromPeer.split(\"/\");\n          fromPeer = p[p.length - 1];\n        }\n        switch (msgEvent) {\n          //first connect, list of all peers connected.\n          case \"peers\":\n            //this is first call when you connect,\n            //  so we can check for channelPath here dynamically.\n            var sysNum = meta.f.lastIndexOf(\"__sys__\");\n            if (sysNum > -1 && !this.channelPath) {\n              own.channelPath = meta.f.substring(0, sysNum); //save message path for sending.\n              console.log(\"*signal*  channelPath \", this.channelPath);\n            }\n            //setUsers(payload.users);\n            break;\n          //new peer connected\n          case \"peer_connected\":\n            //addUser(fromPeer);\n            break;\n          //peer left.\n          case \"peer_removed\":\n            // removeUser(fromPeer);\n            break;\n          //message received. Call to display.\n          case \"message\":\n            //onUserMsg(payload.msg, fromPeer, toPeer);\n            var data = payload.msg;\n            data.f = fromPeer;\n            if (\n              data.type === \"candidate\" ||\n              data.type === \"offer\" ||\n              data.type === \"answer\" ||\n              data.type === \"custom\"\n            ) {\n              own.emit(data.type, data);\n            }\n            break;\n          default:\n            break;\n        }\n        own.emit(\"message\", msg.data);\n      });\n      //console.log('sig:  ',this.sig);\n    };\n    // User event, sends user message.\n    _sig.prototype.sendMessage = function (msg, toPeer, info) {\n      if (!info) info = {};\n      console.log(\n        \"*signal*  sendMessage: \",\n        msg,\n        \", to: \",\n        toPeer,\n        \" info: \",\n        info\n      );\n      if (msg === undefined || msg.length < 1) return;\n      var pkt = {\n        t: \"u\", // user message service\n        m: {\n          f: this.channelPath + this.userName,\n          o: !!info.m_event ? info.m_event : \"message\",\n        },\n        p: { msg: msg },\n      };\n      //if its to a peer, add direct message var (t) to meta object.\n      if (!!toPeer) pkt.m.t = toPeer;\n      //console.log('*signal*  sendMessage pkt: ',pkt);\n      this.sig.send(JSON.stringify(pkt));\n\n      return pkt;\n    };\n\n    //formats the custom channel path how we need it.\n    _sig.prototype.cleanChPath = function (path) {\n      //has slash at front\n      if (path.indexOf(\"/\") !== 0) path = \"/\" + path;\n      if (path.lastIndexOf(\"/\") === path.length - 1)\n        path = path.substr(0, path.lastIndexOf(\"/\"));\n      //console.log('cleanChPath new path: '+path);\n      return path;\n    };\n\n    //Keeps pinging signal server to keep connection alive.\n    _sig.prototype.startHeart = function () {\n      //console.log('*signal*  startHeart ',this.keepAliveInt);\n      if (!!this.heartbeat) clearInterval(this.heartbeat);\n      var own = this;\n      this.heartbeat = setInterval(function () {\n        own.sig.send(\"ping\");\n      }, $xirsys.signal.keepAliveInt);\n    };\n    _sig.prototype.stopHeart = function () {\n      clearInterval(this.heartbeat);\n      this.heartbeat = null;\n      //this.sig = null;\n      console.log(\"signal closed!\");\n    };\n\n    //events\n    _sig.prototype.on = function (sEvent, cbFunc) {\n      //console.log('*signal*  on ',sEvent,', func: '+cbFunc);\n      if (!sEvent || !cbFunc) {\n        console.log('error:  missing arguments for \"on\" event.');\n        return false;\n      }\n      //if event does not exist create it and give it an array for listeners.\n      if (!this.evtListeners[sEvent]) this.evtListeners[sEvent] = [];\n      //add listener to event.\n      this.evtListeners[sEvent].push(cbFunc);\n    };\n    _sig.prototype.off = function (sEvent, cbFunc) {\n      if (!this.evtListeners.hasOwnProperty(sEvent)) return false; //end\n\n      var index = this.evtListeners[sEvent].indexOf(cbFunc);\n      if (index !== -1) {\n        this.evtListeners[sEvent].splice(index, 1);\n        return true; //else end here.\n      }\n      return false; //else end here.\n    };\n\n    _sig.prototype.emit = function (sEvent, data) {\n      //console.log('*signal*  emit ',sEvent,', func: '+data);\n      var handlers = this.evtListeners[sEvent];\n      if (!!handlers) {\n        var l = handlers.length;\n        for (var i = 0; i < l; i++) {\n          var item = handlers[i];\n          item.apply(this, [{ type: sEvent, data: data }]);\n        }\n      }\n    };\n    console.log(\"$xirsys.signal Loaded Successfuly!!!\");\n    _sig = null;\n\n    // p2p\n\n    var _p2p = ($xirsys.p2p = function (signal, mediaStream, servers, info) {\n      if (!info) info = {};\n      //info can have TURN only filter.\n      console.log(\n        \"*p2p*  servers: \",\n        servers,\n        \", mediaStream: \",\n        mediaStream,\n        \", sig: \",\n        signal,\n        \", info: \",\n        info\n      );\n      this.evtListeners = {};\n      this.pc = null; //peer connection\n\n      var own = this;\n      this.sig = signal;\n      if (!!this.sig) {\n        this.sig.on(\"candidate\", (evt) => {\n          own.receiveCandidate(evt);\n        });\n        this.sig.on(\"offer\", (evt) => {\n          own.receiveOffer(evt);\n        });\n        this.sig.on(\"answer\", (evt) => {\n          own.receiveAnswer(evt);\n        });\n      }\n      this.servers = !!servers ? servers : {};\n      this.forceTurn = info.forceTurn != null ? info.forceTurn : false;\n      this.stream = mediaStream;\n      this.remotePeerID = null;\n      this.remoteStreams = {};\n\n      this.isCaller = null; //true / false\n      this.autoAnswer = info.autoAnswer != null ? info.autoAnswer : true;\n    });\n\n    _p2p.prototype.peerConnSuccess = \"peer.connect.success\";\n    _p2p.prototype.peerConnRequest = \"peer.connect.request\";\n    _p2p.prototype.iceDisconnected = \"peer.connect.disconnected\";\n\n    _p2p.prototype.close = function () {\n      if (this.pc) {\n        this.pc.close();\n      }\n      this.remoteStreams = {};\n      this.remotePeerID = null;\n      this.isCaller = null;\n    };\n    //used to update the media and renegociate p2p connection.\n    _p2p.prototype.updateMediaStream = function (mediaStream) {\n      console.log(\"*p2p*  updateMediaStream \", mediaStream);\n\n      this.stream = mediaStream;\n      if (!!this.pc && this.stream) {\n        this.isCaller = true;\n        const own = this;\n        // this.pc.addStream(this.stream);`\n        this.stream.getTracks().forEach((track) => {\n          own.pc.addTrack(track, own.stream);\n        });\n        this.pc\n          .createOffer()\n          .then((desc) => {\n            own.setLocalAndSendMessage(desc);\n          }) // success\n          .catch((err) => {\n            own.onCreateSessionDescriptionError(err);\n          }); // error\n      }\n      return true;\n    };\n    //calls peer @custID and estblishes a p2p connection.\n    _p2p.prototype.callPeer = function (custID) {\n      console.log(\"*p2p*  callPeer \", custID);\n      if (this.createPeerConnection() && this.stream) {\n        //this flag tells our code we are doing the calling.\n        console.log(\"this pc =>> \", this.pc, this);\n        this.isCaller = true;\n        const own = this;\n        this.remotePeerID = custID;\n        // this.pc.addStream(this.stream);\n        this.stream.getTracks().forEach((track) => {\n          own.pc.addTrack(track, own.stream);\n        });\n        this.pc\n          .createOffer()\n          .then((desc) => {\n            own.setLocalAndSendMessage(desc);\n          }) // success\n          .catch((err) => {\n            own.onCreateSessionDescriptionError(err);\n          }); // error\n      }\n    };\n\n    _p2p.prototype.receiveCandidate = function (evt) {\n      if (!this.pc) return false;\n      var iceCandidate = evt.data;\n      //console.log('*p2p*  receiveCandidate ',iceCandidate);\n      var rtcIceCandidate = new RTCIceCandidate(iceCandidate);\n      this.pc.addIceCandidate(rtcIceCandidate);\n    };\n\n    //user calles to accept offer when this has autoAnswer false\n    _p2p.prototype.acceptRequest = function (offer) {\n      //Pass offer to method with true which tells method offer was accepted.\n      this.receiveOffer(offer, true);\n    };\n\n    _p2p.prototype.receiveOffer = function (evt, isVerfied) {\n      var verified = isVerfied === true;\n      var desc = evt.data;\n      console.log(\n        \"*p2p*  receiveOffer \",\n        desc,\n        \" remotePeerID = \",\n        this.remotePeerID,\n        \"autoAnswer\",\n        this.autoAnswer\n      );\n      //if autoAnser is false, and this has not been verified, stop and emit request event.\n      if (!this.autoAnswer && !verified) {\n        console.log(\"needs verification!\");\n        this.emit(this.peerConnRequest, evt.data);\n        return;\n      }\n      var own = this;\n      //if autoAnser is false and has been verfied, OR autoAnswer is true then connect us.\n      if (!this.remotePeerID && !!desc.f) this.remotePeerID = desc.f;\n      console.log(\"*p2p*  !pc \", this.pc, \", !iscaller: \", this.isCaller);\n      if (!this.pc && !this.isCaller) {\n        if (this.createPeerConnection() && this.stream) {\n          // this.pc.addStream(this.stream);\n          this.stream.getTracks().forEach((track) => {\n            own.pc.addTrack(track, own.stream);\n          });\n        }\n      }\n\n      try {\n        this.pc.setRemoteDescription(new RTCSessionDescription(desc));\n      } catch (e) {\n        console.error(\"**P2p** setRemoteDescription offer ,\", e);\n      }\n\n      this.pc\n        .createAnswer()\n        .then((desc) => {\n          own.setLocalAndSendMessage(desc);\n        }) // success\n        .catch((err) => {\n          own.onCreateSessionDescriptionError(err);\n        }); // error\n    };\n\n    _p2p.prototype.receiveAnswer = function (evt) {\n      var desc = evt.data;\n      console.log(\"*p2p*  receiveAnswer \", desc);\n      if (this.remotePeerID !== desc.f) return; //not the droid were looking for.\n      try {\n        this.pc.setRemoteDescription(new RTCSessionDescription(desc));\n      } catch (e) {\n        console.error(\"**P2p** setRemoteDescription answer ,\", e);\n      }\n    };\n\n    _p2p.prototype.createPeerConnection = function () {\n      console.log(\"*p2p*  createPeerConnection \");\n      //if(!!this.pc) return true;\n      try {\n        var own = this;\n        console.log(\"RTCPeerConnection servers:  \", this.servers);\n        this.pc = new RTCPeerConnection(this.servers);\n\n        this.pc.ontrack = (event) => {\n          event.streams[0].getTracks().forEach((track) => {\n            console.log(rstream, \"rstreeeeem\");\n            rstream.addTrack(track);\n          });\n        };\n\n        this.pc.onicecandidate = function (evt) {\n          //send to peer\n          var cand = evt.candidate;\n          if (!cand) return;\n          if (own.forceTurn && cand.candidate.indexOf(\"typ relay\") === -1) {\n            cand = null;\n          } else {\n            //console.log('Is Turn: ',own.forceTurn,' Candidate: ',cand);\n            own.sig.sendMessage(\n              {\n                type: \"candidate\",\n                candidate: cand.candidate,\n                sdpMid: cand.sdpMid,\n                sdpMLineIndex: cand.sdpMLineIndex,\n              },\n              own.remotePeerID\n            );\n          }\n        };\n        // this.pc.onaddstream = (evt) => {\n        //   console.log(\"*p2p*  onaddstream \", evt);\n        //   own.addRemoteStream(evt.stream); //remoteStreams\n        // };\n        this.pc.onremovestream = (evt) =>\n          console.log(\"*p2p*  onremovestream \", evt);\n        this.pc.onconnectionstatechange = (evt) =>\n          console.log(\n            \"*p2p*  onconnectionstatechange: \" + own.pc.connectionState\n          );\n        this.pc.oniceconnectionstatechange = (evt) => {\n          console.log(\n            \"*p2p*  oniceconnectionstatechange: \" + own.pc.iceConnectionState\n          );\n\n          // this.pc.ontrack = (event) => {\n          //   event.streams[0].getTracks().forEach((track) => {\n          //     own.addTrack(track);\n          //   });\n          // };\n\n          switch (own.pc.iceConnectionState) {\n            case \"checking\":\n              break;\n            case \"connected\":\n              break;\n            case \"disconnected\":\n              own.emit(own.iceDisconnected, own.remotePeerID);\n              break;\n            case \"failed\":\n              break;\n            // case \"closed\":\n            //   own.pc = null;\n            //   console.log(\"pc: \", own.pc);\n            //   break;\n            default:\n              break;\n          }\n        };\n        return true;\n      } catch (e) {\n        console.log(\"Failed to create PeerConnection, exception: \" + e.message);\n        return false;\n      }\n    };\n\n    _p2p.prototype.hangup = function (callId) {\n      console.log(\"*p2p*  hangup\", callId);\n      //var stream = this.remoteStreams[callId];\n      this.pc.close();\n      this.remoteStreams[callId] = null;\n      this.remotePeerID = null;\n      this.isCaller = false;\n      //if no streams close and nulify pc.\n      //this.pc = null;\n    };\n\n    _p2p.prototype.addTrack = function (track) {\n      this.remoteStreams[this.remotePeerID] = track;\n      this.emit(this.peerConnSuccess, this.remotePeerID);\n      this.isCaller = false;\n    };\n\n    _p2p.prototype.addRemoteStream = function (remoteStream) {\n      this.remoteStreams[this.remotePeerID] = remoteStream;\n      this.emit(this.peerConnSuccess, this.remotePeerID);\n      this.isCaller = false;\n    };\n\n    _p2p.prototype.getLiveStream = function (remotePeerID) {\n      return this.remoteStreams[remotePeerID];\n    };\n\n    _p2p.prototype.setLocalAndSendMessage = function (sessionDescription) {\n      console.log(\n        \"*p2p*  setLocalAndSendMessage sending message\",\n        sessionDescription\n      );\n      this.pc.setLocalDescription(sessionDescription);\n      //sendMessage(sessionDescription);\n      console.log(\"sendMessage for: \", this.remotePeerID);\n      this.sig.sendMessage(sessionDescription, this.remotePeerID);\n    };\n\n    _p2p.prototype.onCreateSessionDescriptionError = function (error) {\n      console.log(\"Failed to create session description: \", error);\n    };\n\n    /* EVENTS */\n\n    _p2p.prototype.on = function (sEvent, cbFunc) {\n      //console.log('*p2p*  on ',sEvent,', func: '+cbFunc);\n      if (!sEvent || !cbFunc) {\n        console.log(\"error:  missing arguments for on event.\");\n        return false;\n      }\n      if (!this.evtListeners[sEvent]) this.evtListeners[sEvent] = [];\n      this.evtListeners[sEvent].push(cbFunc);\n    };\n    _p2p.prototype.off = function (sEvent, cbFunc) {\n      console.log(\"off\");\n      this.evtListeners.push(cbFunc);\n    };\n\n    _p2p.prototype.emit = function (sEvent, data) {\n      var handlers = this.evtListeners[sEvent];\n      if (!!handlers) {\n        var l = handlers.length;\n        for (var i = 0; i < l; i++) {\n          var item = handlers[i];\n          item.apply(this, [{ type: sEvent, data: data }]);\n        }\n      }\n    };\n\n    console.log(\"$xirsys.p2p Loaded Successfuly!!!\");\n    _p2p = null;\n  }, []);\n\n  return { xirsys: $xirsys };\n}\n\nexport default Xirsys;\n","import Xirsys from \"./Xirsys\";\nimport { useState, useEffect } from \"react\";\nimport { set } from \"express/lib/application\";\n\nfunction Main() {\n  // const location = {};\n\n  //custom: check URL for \"ch\" var, and set the channel accourdingly\n  var channelPath = \"\"; //set this variable to specify a channel path\n  // var ch = decodeURI(\n  //   (RegExp(\"ch\" + \"=\" + \"(.+?)(&|$)\").exec(location.search) || [, null])[1]\n  // );\n  // if (ch != \"null\") channelPath = ch;\n  // console.log(\"channel path: \", channelPath);\n\n  const [lstream, setLStream] = useState(null);\n  const [rstream, setRStream] = useState(new MediaStream());\n  const [username, setUsername] = useState(null);\n  const [remoteCallID, setRemoteCallID] = useState(null);\n\n  const [startCall, setStartCall] = useState(false);\n\n  const [peer, setPeer] = useState(null);\n  const [sig, setSig] = useState(null);\n  // const [media, setMedia] = useState(null);\n  const [ice, setIce] = useState(null);\n\n  const [call, setCall] = useState(false);\n  const [inCall, setInCall] = useState(false);\n\n  const { xirsys } = Xirsys(setRemoteCallID, rstream);\n\n  const [$xirsys, setXirsys] = useState(null);\n\n  const [reload, setReload] = useState(false);\n\n  useEffect(() => {\n    if (reload) {\n      // onLoad();\n      setXirsys(xirsys);\n      console.log(\"reload ....\");\n      setReload(false);\n    }\n  }, [reload]);\n\n  useEffect(() => {\n    if ($xirsys) {\n      onLoad();\n    }\n  }, [$xirsys]);\n\n  useEffect(() => {\n    if (lstream) {\n      //create signal if null\n      if (!sig)\n        setSig(\n          new $xirsys.signal(\"/webrtc\", username, { channel: channelPath })\n        );\n      //if the peer is created, update our media\n      if (!!peer) peer.updateMediaStream(lstream);\n    }\n  }, [lstream]);\n\n  useEffect(() => {\n    if (peer) {\n      peer.on(peer.peerConnSuccess, onStartCall);\n      console.log(\"peer \", peer);\n    }\n    console.log(\"peer \", peer);\n  }, [peer]);\n\n  useEffect(() => {\n    if (call) {\n      callRemotePeer();\n      setCall(false);\n    }\n  }, [call]);\n\n  useEffect(() => {\n    if (sig) doSignal();\n  }, [sig]);\n\n  useEffect(() => {\n    if (ice) ice.on(ice.onICEList, onICE);\n  }, [ice]);\n\n  // const [interval, setInter] = useState(null);\n  // const intervalIce = () => {\n  //   ice.on(ice.onICEList, onICE);\n  // };\n\n  // useEffect(() => {\n  //   if (ice) {\n  //     if (rstream && !rstream.active) setInter(setInterval(intervalIce, 1000));\n  //     else if (interval && rstream && rstream.active) {\n  //       clearInterval(interval);\n  //       setInter(null);\n  //     }\n  //   }\n  // }, [rstream, ice]);\n\n  useEffect(() => {\n    console.log(\"remote Id == \", remoteCallID);\n\n    if (sig && remoteCallID && remoteCallID !== username) doSignal();\n  }, [remoteCallID]);\n  //if there is no remoteCallID show sharable link to call user.\n\n  function callRemotePeer() {\n    if (!!remoteCallID) {\n      console.log(\"Calling \" + remoteCallID);\n      peer.callPeer(remoteCallID);\n    } else {\n      console.log(\"Error\", \"A remote peer was not found!\");\n    }\n  }\n\n  // Get Xirsys ICE (STUN/TURN)\n  function doICE() {\n    console.log(\"doICE \");\n    if (!ice) {\n      setIce(new $xirsys.ice(\"/webrtc\", { channel: channelPath }));\n      //   ice.on(ice.onICEList, onICE);\n    }\n  }\n\n  function onICE(evt) {\n    console.log(\"onICE \", evt);\n    if (evt.type === ice.onICEList) {\n      getMyMedia();\n      // setMedia(new $xirsys.media());\n    }\n  }\n\n  //Get local user media\n  function getMyMedia() {\n    console.log(\"getMyMedia()\");\n\n    var mediaConstraints = {\n      audio: true,\n    };\n\n    navigator.mediaDevices\n      .getUserMedia(mediaConstraints)\n      .then((str) => {\n        setLocalStream(str);\n      })\n      .catch((err) => {\n        console.log(\"Could not get Media: \", err);\n        alert(\"Could not get Media!! Please check your camera and mic...\");\n      });\n  }\n\n  //Get Xirsys Signaling service\n  function doSignal() {\n    sig.on(\"message\", (msg) => {\n      let pkt = JSON.parse(msg.data);\n\n      console.log(\"message log ,\", msg, $xirsys);\n\n      let payload = pkt.p; //the actual message data sent\n      let meta = pkt.m; //meta object\n      let msgEvent = meta.o; //event label of message\n      // let toPeer = meta.t; //msg to user (if private msg)\n      let fromPeer = meta.f; //msg from user\n      //remove the peer path to display just the name not path.\n      if (!!fromPeer) {\n        let p = fromPeer.split(\"/\");\n        fromPeer = p[p.length - 1];\n      }\n      switch (msgEvent) {\n        //first Connect Success!, list of all peers connected.\n        case \"peers\":\n          //this is first call when you connect,\n          onReady();\n          // if we are connecting to a remote user and remote\n          // user id is found in the list then initiate call\n          if (!!remoteCallID) {\n            let users = payload.users;\n            if (users.indexOf(remoteCallID) > -1) {\n              setCall(true);\n            }\n          }\n          break;\n        //peer gone.\n        case \"peer_removed\":\n          if (fromPeer === remoteCallID) onStopCall();\n          break;\n\n        // new peer connected\n        //case \"peer_connected\":\n        // \taddUser(fromPeer);\n        // \tbreak;\n        // message received. Call to display.\n        //case 'message':\n        // \tonUserMsg(payload.msg, fromPeer, toPeer);\n        // \tbreak;\n        default:\n          break;\n      }\n    });\n  }\n\n  //Ready - We have our ICE servers, our Media and our Signaling.\n  function onReady() {\n    console.log(\"* onReady!\");\n    // setup peer connector, pass signal, our media and iceServers list.\n    let isTURN = getURLParameter(\"isTURN\") === \"true\"; //get force turn var.\n    console.log(\"isTURN \", isTURN);\n    setPeer(\n      new $xirsys.p2p(\n        sig,\n        lstream,\n        !ice ? {} : { iceServers: ice.iceServers },\n        { forceTurn: isTURN }\n      )\n    );\n    //add listener when a call is started.\n  }\n  // A peer call started udpate the UI to show remote video.\n  function onStartCall(evt) {\n    console.log(\"*main*  onStartCall \", evt);\n    let remoteId = evt.data;\n    console.log(\"peer scall \", peer);\n    setRemoteStream(peer.getLiveStream(remoteId));\n    //   shareTitleEl.innerHTML = \"In call with user:\";\n    setRemoteCallID(remoteId);\n    setInCall(true);\n  }\n\n  function onStopCall() {\n    console.log(\"*main*  onStopCall \");\n    if (inCall) {\n      peer.hangup(remoteCallID);\n    }\n\n    console.log($xirsys);\n\n    // setXirsys(null);\n  }\n\n  function reset() {\n    setXirsys(null);\n    setInCall(false);\n    setRemoteCallID(null);\n    setStartCall(false);\n    setIce(null);\n    setSig(null);\n    setPeer(null);\n    // setMedia(null);\n    // setLStream(null);\n    // setRStream(new MediaStream());\n  }\n\n  /* UI METHODS */\n\n  //sets local user media to video object.\n  function setLocalStream(str) {\n    console.log(\"*main*  setLocalStream & Video obj \", str);\n    // localStream = str;\n    setLStream(str);\n    // localVideoEl.srcObject = str;\n  }\n  //sets remote user media to video object.\n  function setRemoteStream(str) {\n    console.log(\"*main*  setRemoteStream & Video obj \", str);\n    // remoteStream = str;\n    console.log($xirsys.pc, \"PC\");\n    // $xirsys.pc.ontrack = (event) => {\n    //   event.streams[0].getTracks().forEach((track) => {\n    //     rstream.addTrack(track);\n    //   });\n    // };\n    // setRStream(str);\n    setStartCall(true);\n  }\n\n  //gets URL parameters\n  function getURLParameter(name) {\n    var url_string = window.location.href;\n    var url = new URL(url_string);\n    var c = url.searchParams.get(name);\n\n    return c ? c : null;\n  }\n  //makes unique userid\n  function guid(s = \"user\") {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n    return s + s4() + s4();\n  }\n\n  const onLoad = () => {\n    console.log(\"pretty loaded!!\");\n\n    // getMyMedia();\n\n    setSig(null);\n    if (!username) setUsername(guid()); //create random local username\n    let urlName = getURLParameter(\"callid\"); //get call id if exists from url\n    if (!!urlName) {\n      setRemoteCallID(urlName);\n    }\n\n    //get Xirsys service\n    doICE();\n    if (reload) setReload((r) => !r);\n  };\n\n  return {\n    onLoad,\n    lstream,\n    rstream,\n    onStopCall,\n    startCall,\n    setReload,\n    reset,\n  };\n}\nexport default Main;\n","import React, { useEffect, useState } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport WaveAudio from \"./WaveAudio\";\n\nimport Main from \"../hooks/Main1\";\n\nfunction Audio({ type = 0, answer }) {\n  const { onLoad, lstream, rstream, onStopCall, startCall, setReload, reset } =\n    Main();\n\n  useEffect(() => {\n    console.log(\"Type is ==> \", type, startCall);\n    if (type === 0) {\n      stopAudioOnly(lstream);\n      stopAudioOnly(rstream);\n      if (startCall) onStopCall();\n    }\n    if (type === 1) {\n      reset();\n      // onLoad();\n      setReload(true);\n    }\n  }, [type]);\n\n  useEffect(() => {\n    if (startCall) {\n      answer();\n    }\n  }, [startCall]);\n\n  // useEffect(() => {\n  //   console.log(\"r ===>> \", rstream);\n  //   if (rstream.active) {\n  //     answer();\n  //   }\n  // }, [rstream]);\n\n  const [interval, setInter] = useState(null);\n  const [cnt, setCnt] = useState(0);\n\n  const intervalAnswer = () => {\n    // console.log(\"set cnt \", cnt);\n    setCnt((c) => c + 1);\n  };\n\n  useEffect(() => {\n    if (type === 1) setInter(setInterval(intervalAnswer, 1000));\n    else if (interval) {\n      clearInterval(interval);\n      setInter(null);\n    }\n  }, [type, rstream]);\n\n  useEffect(() => {\n    // console.log(\"rstream s ===>> \", rstream);\n    if (rstream) {\n      if (rstream.active) {\n        console.log(\"answer call\");\n        // setStream(rstream);\n        answer();\n      } else if (!rstream.active) {\n        // setCnt((c) => c + 1);\n      }\n    }\n    // console.log(\"cntttt \", cnt);\n    // if (cnt === 4) {\n    //   onStopCall();\n    // } else if (cnt === 5) {\n    //   setCnt(0);\n    //   onLoad();\n    // }\n  }, [cnt]);\n\n  return type === 1 ? (\n    <Loader type=\"Bars\" color=\"rgba(102, 193, 113, 1)\" height={80} width={80} />\n  ) : type === 2 && rstream ? (\n    <WaveAudio stream={rstream} lstream={lstream} />\n  ) : (\n    <div></div>\n  );\n}\n\nexport default Audio;\n\nfunction stopAudioOnly(stream) {\n  if (stream) {\n    stream.getTracks().forEach(function (track) {\n      track.stop();\n      console.log(\"st\", stream);\n    });\n  }\n}\n","import { useState } from \"react\";\n\nfunction Call() {\n  const [state, setState] = useState(0);\n  const [btnText, setBtnText] = useState(\"Call\");\n\n  const click = function () {\n    state === 0 && (setState(1) || setBtnText(\"Dialling\"));\n    state === 1 && (setState(0) || setBtnText(\"Call\"));\n    // state === 1 && (setState(2) || setBtnText(\"End\"));\n    state === 2 && (setState(0) || setBtnText(\"Call\"));\n  };\n\n  const answer = function () {\n    setState(2);\n    setBtnText(\"End\");\n  };\n\n  return { state, click, btnText, answer };\n}\n\nexport default Call;\n","import React from \"react\";\nimport Audio from \"./component/Audio\";\nimport Call from \"./hooks/Call\";\n\nfunction App() {\n  const { state, click, btnText, answer } = Call();\n\n  return (\n    <div className=\"App\">\n      <div className=\"logo\">\n        <h4>TalkTime</h4>\n      </div>\n      <div>\n        <h5>Find someone to talk to.</h5>\n      </div>\n      <div className=\"audio-animation\">\n        <Audio type={state} answer={answer} />\n      </div>\n      <div className=\"button\">\n        <button onClick={click} className={btnText}>\n          {btnText}\n        </button>\n      </div>\n      <div className=\"footer\">\n        <a href=\"/privacy\">Privacy Policy</a> | <a href=\"/terms\">Terms</a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}